[
  {
    "id": "DEdwVDVzs9",
    "type": "toc",
    "data": {
      "items": [
        {
          "id": "icox4zxno",
          "reference": "grV-RHt7dh",
          "text": "Langchain",
          "level": 1
        },
        {
          "id": "h1gvyuy6tl",
          "reference": "a3LN9Eom_Q",
          "text": "OpenAI Api Key",
          "level": 2
        },
        {
          "id": "36eet2ixr4",
          "reference": "sbAJJ2E7Qe",
          "text": "LLMs: Get Predictions from a Language Model",
          "level": 1
        },
        {
          "id": "h274lwolay",
          "reference": "Ehb_V-XP56",
          "text": "Prompt Templates: Manage Prompts for LLMs",
          "level": 2
        },
        {
          "id": "97qpybebih",
          "reference": "16qAUvcpKA",
          "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
          "level": 2
        },
        {
          "id": "ek2z52pv7f",
          "reference": "KlMD_02t9q",
          "text": "Agents: Dynamically Run Chains Based on User Input",
          "level": 2
        },
        {
          "id": "uzxidsygsv",
          "reference": "f27I0DAk4q",
          "text": "Memory: Add State to Chains and Agents",
          "level": 2
        },
        {
          "id": "ss987v9bs1",
          "reference": "TKr-GpR_rg",
          "text": "The reactive way to add state to chains and agents",
          "level": 3
        },
        {
          "id": "oy0pscnp3q",
          "reference": "4Ow6Bbpqq-",
          "text": "Streaming",
          "level": 2
        },
        {
          "id": "9wqbag9ptg",
          "reference": "DzAjJiKiiT",
          "text": "Chat Models",
          "level": 1
        },
        {
          "id": "w8rkje7psc",
          "reference": "l7mADWwap0",
          "text": "Chat Prompt Templates: Manage Prompts for Chat Models",
          "level": 2
        },
        {
          "id": "rqlgr8jc5n",
          "reference": "JynPrGy-FO",
          "text": "Model + Prompt = LLMChain",
          "level": 2
        },
        {
          "id": "i8chiz6yrq",
          "reference": "8wk0D71HUS",
          "text": "Agents: Dynamically Run Chains Based on User Input",
          "level": 2
        },
        {
          "id": "84uzzboazr",
          "reference": "O8yXA4PXgk",
          "text": "Memory: Add State to Chains and Agents",
          "level": 2
        },
        {
          "id": "tu282kbzj2",
          "reference": "PumjBvKo-D",
          "text": "Replication",
          "level": 1
        }
      ]
    },
    "index": 0,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "DEdwVDVzs9",
                    "type": "toc",
                    "data": {
                      "items": [
                        {
                          "id": "xttfgvqke5",
                          "reference": "grV-RHt7dh",
                          "text": "Langchain",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683599919402.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373192.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601617661.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662608.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792591.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "items": [
                        {
                          "id": "xesds2cf7f",
                          "reference": "grV-RHt7dh",
                          "text": "Langchain",
                          "level": 1
                        },
                        {
                          "id": "ovngw2kb9o",
                          "reference": "a3LN9Eom_Q",
                          "text": "OpenAI Api Key",
                          "level": 2
                        },
                        {
                          "id": "mtg5xngwq1",
                          "reference": "sbAJJ2E7Qe",
                          "text": "LLMs: Get Predictions from a Language Model",
                          "level": 2
                        },
                        {
                          "id": "w7th4t2o1c",
                          "reference": "Ehb_V-XP56",
                          "text": "Prompt Templates: Manage Prompts for LLMs",
                          "level": 2
                        },
                        {
                          "id": "i96r6np50t",
                          "reference": "16qAUvcpKA",
                          "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
                          "level": 2
                        },
                        {
                          "id": "z79cb9se8f",
                          "reference": "KlMD_02t9q",
                          "text": "Agents: Dynamically Run Chains Based on User Input",
                          "level": 2
                        },
                        {
                          "id": "tc0qy68hml",
                          "reference": "PumjBvKo-D",
                          "text": "Replication",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601796435.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551712.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606196.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "items": [
                        {
                          "id": "9af0yseans",
                          "reference": "grV-RHt7dh",
                          "text": "Langchain",
                          "level": 1
                        },
                        {
                          "id": "alt1rbe6ny",
                          "reference": "a3LN9Eom_Q",
                          "text": "OpenAI Api Key",
                          "level": 2
                        },
                        {
                          "id": "dfqdyckjbb",
                          "reference": "sbAJJ2E7Qe",
                          "text": "LLMs: Get Predictions from a Language Model",
                          "level": 2
                        },
                        {
                          "id": "6bjx9jmmbz",
                          "reference": "Ehb_V-XP56",
                          "text": "Prompt Templates: Manage Prompts for LLMs",
                          "level": 2
                        },
                        {
                          "id": "f6de9ltqnv",
                          "reference": "16qAUvcpKA",
                          "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
                          "level": 2
                        },
                        {
                          "id": "t7jmzaz9ex",
                          "reference": "KlMD_02t9q",
                          "text": "Agents: Dynamically Run Chains Based on User Input",
                          "level": 2
                        },
                        {
                          "id": "3wx24tltzx",
                          "reference": "f27I0DAk4q",
                          "text": "Memory: Add State to Chains and Agents",
                          "level": 2
                        },
                        {
                          "id": "iozlznh5on",
                          "reference": "PumjBvKo-D",
                          "text": "Replication",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602835109.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207422.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235157.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267334.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "items": [
                        {
                          "id": "wuct9slunj",
                          "reference": "grV-RHt7dh",
                          "text": "Langchain",
                          "level": 1
                        },
                        {
                          "id": "5t6t9fy9tx",
                          "reference": "a3LN9Eom_Q",
                          "text": "OpenAI Api Key",
                          "level": 2
                        },
                        {
                          "id": "5h5jrk9h0r",
                          "reference": "sbAJJ2E7Qe",
                          "text": "LLMs: Get Predictions from a Language Model",
                          "level": 1
                        },
                        {
                          "id": "9tpfa3ppfb",
                          "reference": "Ehb_V-XP56",
                          "text": "Prompt Templates: Manage Prompts for LLMs",
                          "level": 2
                        },
                        {
                          "id": "959rj57s9v",
                          "reference": "16qAUvcpKA",
                          "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
                          "level": 2
                        },
                        {
                          "id": "i43gov80ri",
                          "reference": "KlMD_02t9q",
                          "text": "Agents: Dynamically Run Chains Based on User Input",
                          "level": 2
                        },
                        {
                          "id": "hxb50kuu3g",
                          "reference": "f27I0DAk4q",
                          "text": "Memory: Add State to Chains and Agents",
                          "level": 2
                        },
                        {
                          "id": "93a0c9tohr",
                          "reference": "TKr-GpR_rg",
                          "text": "The reactive way to add state to chains and agents",
                          "level": 3
                        },
                        {
                          "id": "n5srpj8xl8",
                          "reference": "4Ow6Bbpqq-",
                          "text": "Streaming",
                          "level": 2
                        },
                        {
                          "id": "33q5pb60gx",
                          "reference": "PumjBvKo-D",
                          "text": "Replication",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603424458.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "items": [
                        {
                          "id": "w9x4yclnn0",
                          "reference": "grV-RHt7dh",
                          "text": "Langchain",
                          "level": 1
                        },
                        {
                          "id": "kkakcnz50k",
                          "reference": "a3LN9Eom_Q",
                          "text": "OpenAI Api Key",
                          "level": 2
                        },
                        {
                          "id": "49mz9d8hgf",
                          "reference": "sbAJJ2E7Qe",
                          "text": "LLMs: Get Predictions from a Language Model",
                          "level": 1
                        },
                        {
                          "id": "dwnr7qsv6g",
                          "reference": "Ehb_V-XP56",
                          "text": "Prompt Templates: Manage Prompts for LLMs",
                          "level": 2
                        },
                        {
                          "id": "gavlv95wf5",
                          "reference": "16qAUvcpKA",
                          "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
                          "level": 2
                        },
                        {
                          "id": "va089zoiwo",
                          "reference": "KlMD_02t9q",
                          "text": "Agents: Dynamically Run Chains Based on User Input",
                          "level": 2
                        },
                        {
                          "id": "738l0if1c1",
                          "reference": "f27I0DAk4q",
                          "text": "Memory: Add State to Chains and Agents",
                          "level": 2
                        },
                        {
                          "id": "nnummlnyvp",
                          "reference": "TKr-GpR_rg",
                          "text": "The reactive way to add state to chains and agents",
                          "level": 3
                        },
                        {
                          "id": "9rf090k3zw",
                          "reference": "4Ow6Bbpqq-",
                          "text": "Streaming",
                          "level": 2
                        },
                        {
                          "id": "5ocb8vtpw1",
                          "reference": "DzAjJiKiiT",
                          "text": "Chat Models",
                          "level": 1
                        },
                        {
                          "id": "chn4aorilu",
                          "reference": "PumjBvKo-D",
                          "text": "Replication",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603664907.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794771.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114449.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150734.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494194.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667471.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788726.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170349.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198084.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285226.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480242.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606535830.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606701906.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606811780.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089332.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607229133.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "items": [
                        {
                          "id": "icox4zxno",
                          "reference": "grV-RHt7dh",
                          "text": "Langchain",
                          "level": 1
                        },
                        {
                          "id": "h1gvyuy6tl",
                          "reference": "a3LN9Eom_Q",
                          "text": "OpenAI Api Key",
                          "level": 2
                        },
                        {
                          "id": "36eet2ixr4",
                          "reference": "sbAJJ2E7Qe",
                          "text": "LLMs: Get Predictions from a Language Model",
                          "level": 1
                        },
                        {
                          "id": "h274lwolay",
                          "reference": "Ehb_V-XP56",
                          "text": "Prompt Templates: Manage Prompts for LLMs",
                          "level": 2
                        },
                        {
                          "id": "97qpybebih",
                          "reference": "16qAUvcpKA",
                          "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
                          "level": 2
                        },
                        {
                          "id": "ek2z52pv7f",
                          "reference": "KlMD_02t9q",
                          "text": "Agents: Dynamically Run Chains Based on User Input",
                          "level": 2
                        },
                        {
                          "id": "uzxidsygsv",
                          "reference": "f27I0DAk4q",
                          "text": "Memory: Add State to Chains and Agents",
                          "level": 2
                        },
                        {
                          "id": "ss987v9bs1",
                          "reference": "TKr-GpR_rg",
                          "text": "The reactive way to add state to chains and agents",
                          "level": 3
                        },
                        {
                          "id": "oy0pscnp3q",
                          "reference": "4Ow6Bbpqq-",
                          "text": "Streaming",
                          "level": 2
                        },
                        {
                          "id": "9wqbag9ptg",
                          "reference": "DzAjJiKiiT",
                          "text": "Chat Models",
                          "level": 1
                        },
                        {
                          "id": "w8rkje7psc",
                          "reference": "l7mADWwap0",
                          "text": "Chat Prompt Templates: Manage Prompts for Chat Models",
                          "level": 2
                        },
                        {
                          "id": "rqlgr8jc5n",
                          "reference": "JynPrGy-FO",
                          "text": "Model + Prompt = LLMChain",
                          "level": 2
                        },
                        {
                          "id": "i8chiz6yrq",
                          "reference": "8wk0D71HUS",
                          "text": "Agents: Dynamically Run Chains Based on User Input",
                          "level": 2
                        },
                        {
                          "id": "84uzzboazr",
                          "reference": "O8yXA4PXgk",
                          "text": "Memory: Add State to Chains and Agents",
                          "level": 2
                        },
                        {
                          "id": "tu282kbzj2",
                          "reference": "PumjBvKo-D",
                          "text": "Replication",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607347895.01
          }
        ]
      ],
      "hash": "bfd4db54cf75e516814e7ea8241185cf5a5d8c6d58172f5fd72f84595f65d658"
    },
    "_meta": {
      "lwt": 1683607347896.01
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "31-xmgpmyccbw"
  },
  {
    "id": "grV-RHt7dh",
    "type": "header",
    "data": {
      "text": "Langchain",
      "level": 1
    },
    "index": 1,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "grV-RHt7dh",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 0,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683599896186.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "",
                      "level": 1
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599900111.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "CH",
                      "level": 1
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599908636.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "",
                      "level": 1
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599909009.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Lan",
                      "level": 1
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599912849.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Lang",
                      "level": 1
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599913313.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Langchain",
                      "level": 1
                    },
                    "index": 0,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599914273.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "LangChain",
                      "level": 1
                    },
                    "index": 1,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600045529.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Langchain",
                      "level": 1
                    },
                    "index": 1,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600061641.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373489.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618245.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662677.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792703.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551960.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606304.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207557.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235322.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267463.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Langchain&nbsp;",
                      "level": 1
                    },
                    "index": 1,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603415537.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Langchain",
                      "level": 1
                    },
                    "index": 1,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603416041.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794892.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114591.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150883.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494375.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667915.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788947.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170619.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198365.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285827.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480479.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536014.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702214.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812198.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089537.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234749.01
          }
        ]
      ],
      "hash": "b6d88841ad71397afd05c01cc4a58af23dd182fb863953b308e2c94da636532b"
    },
    "_meta": {
      "lwt": 1683607234767.01
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "46-xmgpmyccbw"
  },
  {
    "id": "FyV1aNjmJB",
    "type": "alert",
    "data": {
      "type": "primary",
      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>&nbsp;at LangChain."
    },
    "index": 2,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "FyV1aNjmJB",
                    "type": "alert",
                    "data": {
                      "type": "primary",
                      "message": ""
                    },
                    "index": 2,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600013095.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook"
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600015937.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on&nbsp;"
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600018073.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on Quickstart, using LLMS&nbsp;"
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600025993.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <span style=\"background-color: rgb(168, 214, 255);\">Quickstart, using LLMS</span>&nbsp;"
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600031169.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>&nbsp;"
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600032297.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>."
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600036017.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>&nbsp;at ."
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600037681.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>&nbsp;at Lang."
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600039241.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>&nbsp;at Langchain."
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600040537.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "This notebook is based on <a href=\"https://js.langchain.com/docs/getting-started/guide-llm\">Quickstart, using LLMS</a>&nbsp;at LangChain."
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600042985.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373490.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618245.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662677.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792703.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551960.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606305.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207557.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235322.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267463.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794893.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114591.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150884.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494376.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667916.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788947.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170621.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198368.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285828.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480481.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536014.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702215.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812199.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089538.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234750.01
          }
        ]
      ],
      "hash": "b6d88841ad71397afd05c01cc4a58af23dd182fb863953b308e2c94da636532b"
    },
    "_meta": {
      "lwt": 1683607234767.02
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "36-xmgpmyccbw"
  },
  {
    "id": "a3LN9Eom_Q",
    "type": "header",
    "data": {
      "text": "OpenAI Api Key",
      "level": 2
    },
    "index": 3,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "a3LN9Eom_Q",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 3,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600441956.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open",
                      "level": 2
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600444609.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "OpenAI Api",
                      "level": 2
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600446521.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "OpenAI Api&nbsp;",
                      "level": 2
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600447233.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "OpenAI Api Key",
                      "level": 2
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600448273.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618246.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662677.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792703.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551961.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606305.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207558.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235323.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267464.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794893.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114591.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150884.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494377.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667917.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788948.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170621.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198368.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285829.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480482.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536015.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702216.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812200.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089538.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234750.02
          }
        ]
      ],
      "hash": "ed75810a0afc5efe098861694acf9b7a81beef03b3f2ddcb1530613f1878077a"
    },
    "_meta": {
      "lwt": 1683607234767.03
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "29-xmgpmyccbw"
  },
  {
    "id": "ZagMo4J62V",
    "type": "code",
    "data": {
      "code": "// https://platform.openai.com/account/api-keys\nenvironment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
      "language": "javascript",
      "output": ""
    },
    "index": 4,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "ZagMo4J62V",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600436387.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600439457.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = \"\"",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600462769.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = \"\"\nenvironment.openAIApiKey",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600467513.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = \"\"\nenvironment.openAIApiKe",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600468377.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600470017.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = \"\" \nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600479305.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = \"\" || \nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600480265.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600483777.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600484689.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"HERE YOU \"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600589817.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600592041.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600649249.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": "true\n"
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600656985.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600660713.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618246.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662678.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792704.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601819833.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.SERPAPI_API_KEY = environment.openAIApiKey || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601824423.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601826049.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601836793.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601956625.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": "true\n"
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602025305.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602028569.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551961.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606305.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "\nenvironment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603036561.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// \nenvironment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603038089.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// https://platform.openai.com/account/api-keys\nenvironment.openAIApiKey = environment.openAIApiKey || \"\"\n// https://serpapi.com\nenvironment.SERPAPI_API_KEY = environment.SERPAPI_API_KEY || \"\"\nenvironment.wait()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603056151.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207558.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235323.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267464.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794894.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114592.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150885.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494378.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667917.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788948.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170622.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198369.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285830.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480483.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536016.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702217.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812201.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089539.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234751.01
          }
        ]
      ],
      "hash": "168dbf4b4c3c08d41bbb212a1b82a4135c422d4990648ce620d88682e8cdc3da"
    },
    "_meta": {
      "lwt": 1683607234767.04
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "50-xmgpmyccbw"
  },
  {
    "id": "sbAJJ2E7Qe",
    "type": "header",
    "data": {
      "text": "LLMs: Get Predictions from a Language Model",
      "level": 1
    },
    "index": 5,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "sbAJJ2E7Qe",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 3,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600048511.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "LLMs: Get Predictions from a Language Model",
                      "level": 2
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600053713.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373490.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618247.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662678.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792704.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551962.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606306.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207559.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235323.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267465.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "LLMs: Get Predictions from a Language Model",
                      "level": 1
                    },
                    "index": 5,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603421537.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794895.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114592.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150887.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494379.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667918.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788950.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170623.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198371.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285839.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480485.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536017.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702218.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812202.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089539.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234751.02
          }
        ]
      ],
      "hash": "c6770df7748930124ed5e56b6f92121d4ba05119489b06c29c4a0bb114a7a0f0"
    },
    "_meta": {
      "lwt": 1683607234767.05
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "30-xmgpmyccbw"
  },
  {
    "id": "Zg53-yEGgg",
    "type": "code",
    "data": {
      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nmodel.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);",
      "language": "javascript",
      "output": "Cheerful Socks Co."
    },
    "index": 6,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "Zg53-yEGgg",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 2,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683599989080.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599990921.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599995233.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600074498.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\nimport { OpenAI } from \"langchain/llms/openai\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600091665.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600095345.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600105449.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600109289.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600110313.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600114130.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600116193.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need install \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600120161.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need install L\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600124913.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600127001.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Lang\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600128169.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Lacn\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600130761.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Lang\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600131785.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langcha\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600132697.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600133201.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600137657.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we do\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600138361.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, w\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600139873.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600140881.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600141425.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we do \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600144297.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we do for you\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600145881.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we do for yo\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600146481.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600147841.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've installed \nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600151451.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've installed before\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600153289.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've installed before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600153937.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600158505.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\nconst res = await model.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600167225.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\nawait model.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600169849.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\nmodel.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600172337.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\nmodel.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 4,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600175785.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373490.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nmodel.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600474569.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nmodel.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);",
                      "language": "javascript",
                      "output": "Cheerful Socks Co."
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600670145.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618247.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662678.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792704.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551962.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606306.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207559.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235327.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267465.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794897.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114593.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150888.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494380.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667919.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788951.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170623.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198371.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285840.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480485.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536017.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702218.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812202.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089540.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234752.01
          }
        ]
      ],
      "hash": "34b0e52d25d31c41ed71ddac7f074c73feeb17a37a990b800662a7f606b14344"
    },
    "_meta": {
      "lwt": 1683607234767.06
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "67-xmgpmyccbw"
  },
  {
    "id": "Ehb_V-XP56",
    "type": "header",
    "data": {
      "text": "Prompt Templates: Manage Prompts for LLMs",
      "level": 2
    },
    "index": 7,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "Ehb_V-XP56",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 5,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600180615.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Prompt Templates: Manage Prompts for LLMs",
                      "level": 2
                    },
                    "index": 5,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600184667.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373491.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618248.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662679.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792705.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551963.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606307.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207560.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235328.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267466.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794898.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114595.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150889.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494381.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667920.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788952.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170626.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198373.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285841.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480489.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536018.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702219.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812204.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089541.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234753.01
          }
        ]
      ],
      "hash": "cbfa55b97ff9855676cfc8dbf360c0657bde00acb330540f2f5ce3d9b37b1703"
    },
    "_meta": {
      "lwt": 1683607234767.07
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "29-xmgpmyccbw"
  },
  {
    "id": "N3iK8VQt4i",
    "type": "code",
    "data": {
      "code": "const template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
      "language": "javascript",
      "output": "What is a good name for a company that makes colorful socks?"
    },
    "index": 8,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "N3iK8VQt4i",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600188247.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// You don't need import Langchain, we've imported before.\nconst model = new OpenAI({ openAIApiKey: \"sk-...\", temperature: 0.9 });\nmodel.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600191541.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600196457.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst res = await prompt.format({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600221569.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nawait prompt.format({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600223801.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600225481.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600226409.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { PromptTemplate } from \"langchain/prompts\";\n\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">TypeError: Failed to resolve module specifier \"langchain/prompts\". Relative references must start with either \"/\", \"./\", or \"../\".</pre>"
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600228625.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">TypeError: Failed to resolve module specifier \"langchain/prompts\". Relative references must start with either \"/\", \"./\", or \"../\".</pre>"
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600234481.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600234937.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": "What is a good name for a company that makes colorful socks?"
                    },
                    "index": 6,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600235921.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373491.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600678737.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nprompt.format({ product: \"colorful socks\" })",
                      "language": "javascript",
                      "output": "What is a good name for a company that makes colorful socks?"
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600679753.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618248.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662679.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792705.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551964.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606307.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207561.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235328.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267466.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794898.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114595.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150889.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494382.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667920.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788953.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170627.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198373.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285841.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480490.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536019.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702221.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812204.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089541.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234753.02
          }
        ]
      ],
      "hash": "bbf9126685e604e4b86e9e8689c03511a016e80ae23634867da470b637b72e55"
    },
    "_meta": {
      "lwt": 1683607234767.08
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "40-xmgpmyccbw"
  },
  {
    "id": "16qAUvcpKA",
    "type": "header",
    "data": {
      "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
      "level": 2
    },
    "index": 9,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "16qAUvcpKA",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 7,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600282432.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "User input",
                      "level": 2
                    },
                    "index": 7,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600286242.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Chains: Combine LLMs and Prompts in Multi-Step Workflows",
                      "level": 2
                    },
                    "index": 7,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600289745.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373492.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618251.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662679.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792706.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551964.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606307.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207561.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235328.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267466.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794899.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114596.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150890.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494383.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667921.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788954.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170628.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198374.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285842.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480491.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536019.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702222.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812205.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089541.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234754.01
          }
        ]
      ],
      "hash": "c6770df7748930124ed5e56b6f92121d4ba05119489b06c29c4a0bb114a7a0f0"
    },
    "_meta": {
      "lwt": 1683607234767.09
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "30-xmgpmyccbw"
  },
  {
    "id": "7aKwsZyyWo",
    "type": "code",
    "data": {
      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\ninput(\"Which company's product do you want to name?\").pipe(\n  concatMap(product => chain.call({ product })),\n  display\n)",
      "language": "javascript",
      "output": ""
    },
    "index": 10,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "7aKwsZyyWo",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683600292027.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600298657.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373492.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\n\nconst chain = new LLMChain({ llm: model, prompt: prompt });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600386810.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600387905.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\nc",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600388842.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\nchain",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600390433.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600393573.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\n\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600396873.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600397993.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput()\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600399666.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput().pipe(\n  \n)\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600401833.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do \").pipe(\n  \n)\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600406249.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  \n)\nconst res = await chain.call({ product: \"colorful socks\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600407665.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  \n)\nconst res = await ;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600412385.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  s\n)\nconst res = await ;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600413497.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  switchMap(x => chain.call({ product: \"colorful socks\" }))\n)\nconst res = await ;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600417009.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" }))\n)\nconst res = await ;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600421489.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" }))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600423090.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 8,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600423602.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600686698.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  d\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600703689.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600704601.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you wan?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600715457.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600717073.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"W\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600719249.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Wr\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600719815.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you wan?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600720985.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want to ?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600723185.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which product do you want to name?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600727625.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which produc do you want to name?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600743585.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which p do you want to name?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600744265.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which company' do you want to name?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600746433.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which company's do you want to name?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600748905.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which company's product do you want to name?\").pipe(\n  concatMap(x => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600750585.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which company's product do you want to name?\").pipe(\n  concatMap(product => chain.call({ product: \"colorful socks\" })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600763865.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\n\ninput(\"Which company's product do you want to name?\").pipe(\n  concatMap(product => chain.call({ product })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600766937.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\nconst template = \"What is a good name for a company that makes {product}?\";\nconst prompt = new PromptTemplate({\n  template: template,\n  inputVariables: [\"product\"],\n});\nconst chain = new LLMChain({ llm: model, prompt: prompt });\ninput(\"Which company's product do you want to name?\").pipe(\n  concatMap(product => chain.call({ product })),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 10,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600775785.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618251.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662680.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792706.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551964.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606307.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207561.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235329.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267467.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794899.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114596.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150890.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494383.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667921.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788955.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170628.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198375.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285842.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480492.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536020.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702222.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812206.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089542.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234754.02
          }
        ]
      ],
      "hash": "c989b5beaa63b7d64338ed65fb1c8e2a96902e8a304e945d7face7043f731edd"
    },
    "_meta": {
      "lwt": 1683607234767.1
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "64-xmgpmyccbw"
  },
  {
    "id": "KlMD_02t9q",
    "type": "header",
    "data": {
      "text": "Agents: Dynamically Run Chains Based on User Input",
      "level": 2
    },
    "index": 11,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "KlMD_02t9q",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 11,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683601702375.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Agents: Dynamically Run Chains Based on User Input",
                      "level": 2
                    },
                    "index": 11,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601708500.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792707.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551965.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606308.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207562.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235329.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267467.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794900.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114597.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150891.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494384.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667925.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788956.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170629.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198376.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285843.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480494.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536021.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702223.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812207.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089543.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234755.01
          }
        ]
      ],
      "hash": "d54d4eb10693b81235e90e2b8e242a63a9ccf368299120cb7aec2025c8ce1bda"
    },
    "_meta": {
      "lwt": 1683607234767.11
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "24-xmgpmyccbw"
  },
  {
    "id": "d7AybcyfF5",
    "type": "alert",
    "data": {
      "type": "primary",
      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you <a href=\"https://chrome.google.com/webstore/detail/cors-unblock/lfhmikememgdcahcdlaciloancbhjino/related\">CORS Unblock</a>."
    },
    "index": 12,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "d7AybcyfF5",
                    "type": "alert",
                    "data": {
                      "type": "primary",
                      "message": ""
                    },
                    "index": 12,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602148817.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "CORS U"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602154137.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "CORS Unblock"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602155602.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everythinCORS Unblock"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602163913.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on CORS Unblock"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602164993.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602169330.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602170209.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602181753.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602185297.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602187769.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since Serp"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602303497.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602304513.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI doesn't work&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602306897.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI doesn't wo"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602308449.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI rescit"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602310057.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI resrict"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602311497.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI res"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602313025.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI restrict the&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602314817.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unblock in order to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602316153.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate CORS Unbloc in order to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602323417.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activate C in order to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602324505.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please activ in order to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602325129.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, so please acti in order to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602326369.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, s in order to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602327489.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, s in order t bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602329057.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you need bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602332497.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you ha bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602334129.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you have to bypass CORS restrictions since SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602335154.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you have to bypass CORS restrictions sinceSerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602341673.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you have to bypass SerpAPI restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602343153.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you have to bypass SerpAPI's&nbsp; restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602344825.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you have to bypass SerpAPI's CORS restrict&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602345929.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "We run everything on browser, you have to bypass SerpAPI's CORS restrictictions.&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602348617.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because We run everything on browser, you have to bypass SerpAPI's CORS restrictictions.&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602352417.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on browser, you have to bypass SerpAPI's CORS restrictictions.&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602352985.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictictions.&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602355273.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions.&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602363698.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602365313.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you&nbsp;"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602367601.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We rCORS Unblock"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602380665.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you CORS Unblock"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602384961.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you CORS Unblock."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602386089.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you <mark class=\"cdx-marker\">CORS Unblock</mark>."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602420001.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you CORS Unblock."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602420897.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you <span style=\"background-color: rgb(168, 214, 255);\">CORS Unblock</span>."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602422010.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "type": "primary",
                      "message": "Because we run everything on your browser, you have to bypass SerpAPI's CORS restrictions. We recommend you <a href=\"https://chrome.google.com/webstore/detail/cors-unblock/lfhmikememgdcahcdlaciloancbhjino/related\">CORS Unblock</a>."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602424017.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551966.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606308.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207562.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235330.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267468.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794900.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114597.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150891.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494384.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667925.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788956.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170629.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198377.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285843.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480495.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536021.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702223.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812207.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089543.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234755.02
          }
        ]
      ],
      "hash": "1def4de3e596d52c61eeb65d14c9a810cc75bda4ae91a92a26d75dc6982a5a3e"
    },
    "_meta": {
      "lwt": 1683607234767.12
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "69-xmgpmyccbw"
  },
  {
    "id": "RsD9AWjf-p",
    "type": "code",
    "data": {
      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\\n\");\n\nconst input = `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...\\n`);\n\nexecutor.call({ input });",
      "language": "javascript",
      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
    },
    "index": 13,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "RsD9AWjf-p",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683601710517.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nconst result = await executor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601718889.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601724493.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601731889.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601731889.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601731889.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601731890.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601731891.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792707.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602046657.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602057217.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\n\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602069169.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.9 });\n\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602069658.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ temperature: 0 });\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602072105.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nconsole.log(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602074073.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nconsole.log(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602084281.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602088313.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602089857.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"..."
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602090913.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...<pre class=\"py-error wrap\">TypeError: Failed to fetch</pre>"
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602097185.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602194992.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"..."
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602196393.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\n  \" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602205169.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  \"Who is Olivia Wilde's boyfriend?\" +\" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602250041.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  1Who is Olivia Wilde's boyfriend?\" +\" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602254041.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  `Who is Olivia Wilde's boyfriend?\" +\" What is his current age raised to the 0.23 power?\";\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602254771.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =\n  `Who is Olivia Wilde's boyfriend?\" +\" What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602255849.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input =`Who is Olivia Wilde's boyfriend?\" +\" What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602256665.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input = `Who is Olivia Wilde's boyfriend?\" +\" What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602257209.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input = `Who is Olivia Wilde's boyfriend? +\" What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602259553.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input = `Who is Olivia Wilde's boyfriend?  What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602260433.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\");\n\nconst input = `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602261025.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\\n\");\n\nconst input = `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602394993.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n  new Calculator(),\n];\n\nconst executor = await initializeAgentExecutorWithOptions(tools, model, {\n  agentType: \"zero-shot-react-description\",\n});\nprint(\"Loaded agent.\\n\");\n\nconst input = `Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?`;\nprint(`Executing with input \"${input}\"...\\n`);\n\nexecutor.call({ input });",
                      "language": "javascript",
                      "output": "Loaded agent.Executing with input \"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\"...{\n \"output\": \"Harry Styles is Olivia Wilde's boyfriend and his current age raised to the 0.23 power is 2.1156502324195268.\"\n}\n"
                    },
                    "index": 13,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602398689.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551967.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606309.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207563.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235330.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267468.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794901.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114598.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150892.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494387.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667928.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788957.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170630.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198383.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285844.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480497.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536023.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702224.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812209.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089544.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234756.01
          }
        ]
      ],
      "hash": "523a494bc2904a3fa29ae7d4b9d5cad76b21970366601952709e0bfa0d6a5b33"
    },
    "_meta": {
      "lwt": 1683607234767.13
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "56-xmgpmyccbw"
  },
  {
    "id": "f27I0DAk4q",
    "type": "header",
    "data": {
      "text": "Memory: Add State to Chains and Agents",
      "level": 2
    },
    "index": 14,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "f27I0DAk4q",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 14,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602452106.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Memory: Add State to Chains and Agents",
                      "level": 2
                    },
                    "index": 14,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602452889.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551967.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606309.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207564.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235331.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267469.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794902.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114598.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150893.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494388.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667932.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788958.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170631.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198384.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285845.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480498.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536024.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702225.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812210.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089545.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234756.02
          }
        ]
      ],
      "hash": "488b65c53f055d49e38e7fe5bc65f9a8425201d8493a4ad1149ad2cac68c1af6"
    },
    "_meta": {
      "lwt": 1683607234767.14
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "23-xmgpmyccbw"
  },
  {
    "id": "Q7jIzDWu_l",
    "type": "code",
    "data": {
      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
      "language": "javascript",
      "output": "Hi Jim! My name is AI. It's nice to meet you. What brings you here today?\nYou said your name is Jim. Is that correct?"
    },
    "index": 15,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "Q7jIzDWu_l",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602455711.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602461697.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551967.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606309.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602623552.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nconst res2 = await chain.call({ input: \"What's my name?\" });\nconsole.log(res2);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602624073.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\n\nconst res2 = await chain.call({ input: \"What's my name?\" });\nconsole.log(res2);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602625617.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1)\nconst res2 = await chain.call({ input: \"What's my name?\" });\nconsole.log(res2);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602628081.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nconst res2 = await chain.call({ input: \"What's my name?\" });\nconsole.log(res2);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602629257.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nconst res2 = await chain.call({ input: \"What's my name?\" });\nprint(res2);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602632225.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nconst res2 = await chain.call({ input: \"What's my name?\" });\nprint(res2);\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602635882.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nconst res2 = await chain.call({ input: \"What's my name?\" });\nprint(res2);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602636897.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nconst res2 = await chain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602638603.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602641409.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" })",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602641985.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({});\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602645409.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602658625.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 1 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602659617.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602661545.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602662241.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\n\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602676826.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { OpenAI } from \"langchain/llms/openai\";\nimport { BufferMemory } from \"langchain/memory\";\nimport { ConversationChain } from \"langchain/chains\";\n\nconst model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602679225.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602687794.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1+);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602713209.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1+\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602714290.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1+\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602719689.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1+\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602720897.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602726065.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\n\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602760305.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint9\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602761881.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint(\"\")\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602763105.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint(\"\\n\")\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602764210.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint(\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]\n{\n \"response\": \" You said your name is Jim. Is that correct?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602765089.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint(\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602765817.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint(\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602769433.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1);\nprint(\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602770713.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response);\nprint(\"\\n\");\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602777329.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+);\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602783609.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'');\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602784409.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nchain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602785721.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nawait chain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602792649.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602795985.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602797401.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602798969.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
                      "language": "javascript",
                      "output": "[object Object]{\n \"response\": \" Your name is Jim. Is there anything else I can help you with?\"\n}\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602801833.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602802378.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
                      "language": "javascript",
                      "output": "Hi Jim! My name is AI. It's nice to meet you. What brings you here today?\n"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602805433.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
                      "language": "javascript",
                      "output": "Hi Jim! My name is AI. It's nice to meet you. What brings you here today?\nYou said your name is Jim. Is that correct?"
                    },
                    "index": 15,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602806681.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207564.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235331.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267469.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794902.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114599.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150893.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494388.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667932.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788958.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170632.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198385.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285845.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480499.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536024.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702225.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812211.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089545.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234757.01
          }
        ]
      ],
      "hash": "1def4de3e596d52c61eeb65d14c9a810cc75bda4ae91a92a26d75dc6982a5a3e"
    },
    "_meta": {
      "lwt": 1683607234767.15
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "67-xmgpmyccbw"
  },
  {
    "id": "TKr-GpR_rg",
    "type": "header",
    "data": {
      "text": "The reactive way to add state to chains and agents",
      "level": 3
    },
    "index": 16,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "TKr-GpR_rg",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 16,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602855730.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602858686.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "R",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602861001.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "RX",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602861529.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Reactive way",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602863881.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "The Reactive way",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602934177.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "The reactive way",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602934737.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "The reactive way to add state",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602939241.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "The reactive way to add state to chains",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602945625.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "The reactive way to add state to chains and agents",
                      "level": 3
                    },
                    "index": 16,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602947265.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207565.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235332.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267470.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794903.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114599.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150895.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494390.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667933.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788959.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170633.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198385.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285852.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480500.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536025.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702226.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812212.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089546.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234758.01
          }
        ]
      ],
      "hash": "ed75810a0afc5efe098861694acf9b7a81beef03b3f2ddcb1530613f1878077a"
    },
    "_meta": {
      "lwt": 1683607234767.16
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "29-xmgpmyccbw"
  },
  {
    "id": "An1ad3njLy",
    "type": "code",
    "data": {
      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\ninput(\"Write your question here\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
      "language": "javascript",
      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\" Hi there! How can I help you today?\"\n"
    },
    "index": 17,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "An1ad3njLy",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602869456.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602872495.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\n\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602874809.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602875921.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602877569.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"You\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602878617.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602880769.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  \n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602882361.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(x => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602887817.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(x)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602888761.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await chain.call({ input: \"Hi! I'm Jim.\" });\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602890753.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await ;\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input: \"Hi! I'm Jim.\"}))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602895249.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await ;\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input }))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602897193.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await ;\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input })),\n  \n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602898249.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await ;\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602900938.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await ;\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602905913.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\nconst res1 = await ;\nprint(res1.response+'\\n');\nconst res2 = await chain.call({ input: \"What's my name?\" });\nres2.response;\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602908553.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\ninput(\"Your question\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602913553.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\ninput(\"Your questio\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602917945.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\ninput(\"Write your question here\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602922321.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207565.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235332.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267470.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794903.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114600.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150896.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494391.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\ninput(\"Write your question here\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">"
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604648737.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst memory = new BufferMemory();\nconst chain = new ConversationChain({ llm: model, memory: memory });\ninput(\"Write your question here\").pipe(\n  concatMap(input => chain.call({ input })),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\" Hi there! How can I help you today?\"\n"
                    },
                    "index": 17,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604652385.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667936.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788960.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170633.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198386.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285853.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480500.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536026.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702228.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812212.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089546.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234758.02
          }
        ]
      ],
      "hash": "13f74275291277aaf309edf46736ea796e6b91b0bf074ef623f922d108bb25a2"
    },
    "_meta": {
      "lwt": 1683607234767.17
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "41-xmgpmyccbw"
  },
  {
    "id": "4Ow6Bbpqq-",
    "type": "header",
    "data": {
      "text": "Streaming",
      "level": 2
    },
    "index": 18,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "4Ow6Bbpqq-",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 18,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602967904.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Streaming",
                      "level": 2
                    },
                    "index": 18,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602994927.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207565.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235332.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267470.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794904.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114600.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150896.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494391.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667936.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788960.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170634.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198386.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285857.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480501.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536027.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702229.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812213.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089547.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234759.01
          }
        ]
      ],
      "hash": "889df562584f46e9f3b0d738ed294d94f2d092bce287c32be24429a0d63b0e51"
    },
    "_meta": {
      "lwt": 1683607234767.18
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "21-xmgpmyccbw"
  },
  {
    "id": "f7zljMD0GO",
    "type": "code",
    "data": {
      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    }\n  ]\n});\n\nchat.call(\"Write me a song about sparkling water.\")",
      "language": "javascript",
      "output": "Verse1I'msippin'onsomesparklingwaterIt'ssorefreshingandsolightIt'stheperfectwaytoquenchmythirstOnahotsummernightChorus"
    },
    "index": 19,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "f7zljMD0GO",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683602998314.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "onst chat = new OpenAI({\n  streaming: true,\n  callbacks: [\n    {\n      handleLLMNewToken(token: string) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603004329.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  callbacks: [\n    {\n      handleLLMNewToken(token: string) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603006585.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, temperature: 0.2\n  callbacks: [\n    {\n      handleLLMNewToken(token: string) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603025673.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2\n  callbacks: [\n    {\n      handleLLMNewToken(token: string) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603027561.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2.\n  callbacks: [\n    {\n      handleLLMNewToken(token: string) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603028113.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token: string) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603029441.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        process.stdout.write(token);\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603032860.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(\"token\")\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603080617.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token+)\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603082897.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      },\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603083969.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    },\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603088721.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    }\n  ],\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603089809.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    }\n  ]\n});\n\nawait chat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603091753.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    }\n  ]\n});\n\nchat.call(\"Write me a song about sparkling water.\");",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603096881.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    }\n  ]\n});\n\nchat.call(\"Write me a song about sparkling water.\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603097489.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new OpenAI({\n  streaming: true,\n  openAIApiKey: environment.openAIApiKey, \n  temperature: 0.2,\n  callbacks: [\n    {\n      handleLLMNewToken(token) {\n        print(token)\n      }\n    }\n  ]\n});\n\nchat.call(\"Write me a song about sparkling water.\")",
                      "language": "javascript",
                      "output": "Verse1I'msippin'onsomesparklingwaterIt'ssorefreshingandsolightIt'stheperfectwaytoquenchmythirstOnahotsummernightChorus"
                    },
                    "index": 19,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603104753.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207566.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235332.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267470.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794904.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114600.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150897.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494391.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667936.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788961.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170634.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198386.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285857.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480501.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536027.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702230.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812214.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089547.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 19
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234759.02
          }
        ]
      ],
      "hash": "b6d88841ad71397afd05c01cc4a58af23dd182fb863953b308e2c94da636532b"
    },
    "_meta": {
      "lwt": 1683607234767.19
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "36-xmgpmyccbw"
  },
  {
    "id": "DzAjJiKiiT",
    "type": "header",
    "data": {
      "text": "Chat Models",
      "level": 1
    },
    "index": 20,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "DzAjJiKiiT",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 20,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683603433333.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "",
                      "level": 1
                    },
                    "index": 20,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603436705.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "C",
                      "level": 1
                    },
                    "index": 20,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603448545.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Chat",
                      "level": 1
                    },
                    "index": 20,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603449297.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Chat models",
                      "level": 1
                    },
                    "index": 20,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603450457.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Chat Models",
                      "level": 1
                    },
                    "index": 20,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603453641.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794905.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114600.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150897.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494392.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667937.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788962.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170634.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198387.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285858.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480502.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536028.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702230.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812214.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089548.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234760.01
          }
        ]
      ],
      "hash": "f524ee077965681f282acbf222ba6d0829f7ac940f7a47e170239b38c2ccc18d"
    },
    "_meta": {
      "lwt": 1683607234767.2
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "23-xmgpmyccbw"
  },
  {
    "id": "tcZJQ_5Bda",
    "type": "code",
    "data": {
      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"As a helpful assistant, you translate every phrase that I say from English to French.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
      "language": "javascript",
      "output": "{\n \"text\": \"J'aime programmer.\"\n}\n"
    },
    "index": 21,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "tcZJQ_5Bda",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683603456484.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603462217.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });\nchat",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603481545.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });\nchat.call([\n  new HumanChatMessage(\n    \"Translate this sentence from English to French. I love programming.\"\n  ),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603514793.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });\nchat.call([\n  new HumanChatMessage(\n    \"Translate this sentence from English to French. I love programming.\"\n  )\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603517657.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });\n chat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\"),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603529775.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\"),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603531489.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport { HumanChatMessage, SystemChatMessage } from \"langchain/schema\";\n\nconst chat = new ChatOpenAI({ temperature: 0 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\"),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603533553.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ temperature: 0 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\"),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603535521.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\"),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603541817.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603545721.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every \"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603552795.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every p\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603553281.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every ph\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603553753.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse \"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603555545.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse trans\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603556817.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse translate\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603559689.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse translate them\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603560817.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse translate them.\"\n  ),\n  new HumanChatMessage(\"Translate: I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603561369.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse translate them.\"\n  ),\n  new HumanChatMessage(\"Translate:I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603568153.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse translate them.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603569201.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse that  translate them.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603577273.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse that I  translate them.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603578449.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse that I say translate them.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603581905.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse that I say you, translate them.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603583057.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"You are a helpful assistant that translates English to French. So, every pharse that I say you translate them.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603583985.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"As a helpful assistant, you translate every phrase that I say from English to French.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603637257.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nchat.call([\n  new SystemChatMessage(\n    \"As a helpful assistant, you translate every phrase that I say from English to French.\"\n  ),\n  new HumanChatMessage(\"I love programming.\")\n]);",
                      "language": "javascript",
                      "output": "{\n \"text\": \"J'aime programmer.\"\n}\n"
                    },
                    "index": 21,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603644785.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794905.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114601.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150898.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494392.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667937.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788962.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170635.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198387.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285858.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480502.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536029.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702230.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812215.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089548.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 21
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234760.02
          }
        ]
      ],
      "hash": "0f722e36906059889076d90c550a0f06b119a09c0f7f688528a709a1db0aecb2"
    },
    "_meta": {
      "lwt": 1683607234767.21
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "44-xmgpmyccbw"
  },
  {
    "id": "l7mADWwap0",
    "type": "header",
    "data": {
      "text": "Chat Prompt Templates: Manage Prompts for Chat Models",
      "level": 2
    },
    "index": 22,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "l7mADWwap0",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 22,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683603686692.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "MQTT",
                      "level": 2
                    },
                    "index": 22,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603691729.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794905.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Chat Prompt Templates: Manage Prompts for Chat Models",
                      "level": 2
                    },
                    "index": 22,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603810497.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114601.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150898.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494392.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667937.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788963.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170635.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198387.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285858.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480502.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536030.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702231.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812215.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089549.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234761.01
          }
        ]
      ],
      "hash": "300d38045881a62ad40b7af9ea508e2493419eb00ea82d22325f68512a4a228f"
    },
    "_meta": {
      "lwt": 1683607234767.22
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "19-xmgpmyccbw"
  },
  {
    "id": "8mwqA-Z4ni",
    "type": "code",
    "data": {
      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nchat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);",
      "language": "javascript",
      "output": "{\n \"generations\": [\n  [\n   {\n    \"text\": \"J'adore la programmation.\",\n    \"message\": {\n     \"text\": \"J'adore la programmation.\"\n    }\n   }\n  ]\n ],\n \"llmOutput\": {\n  \"tokenUsage\": {\n   \"completionTokens\": 8,\n   \"promptTokens\": 28,\n   \"totalTokens\": 36\n  }\n }\n}\n"
    },
    "index": 23,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "8mwqA-Z4ni",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683603813556.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603818575.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nconst responseA = await chat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603822217.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nconst responseA = await chat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);\nresponseA",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603827465.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nconst responseA = await chat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);\nresponseA",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603838613.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nconst responseA = await chat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);\nresponseA",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603839922.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nconst responseA = await chat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);\nresponseA",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603842809.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nchat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);\nresponseA",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603846705.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nchat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603848217.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\nchat.generatePrompt([\n  await translationPrompt.formatPromptValue({\n    input_language: \"English\",\n    output_language: \"French\",\n    text: \"I love programming.\",\n  }),\n]);",
                      "language": "javascript",
                      "output": "{\n \"generations\": [\n  [\n   {\n    \"text\": \"J'adore la programmation.\",\n    \"message\": {\n     \"text\": \"J'adore la programmation.\"\n    }\n   }\n  ]\n ],\n \"llmOutput\": {\n  \"tokenUsage\": {\n   \"completionTokens\": 8,\n   \"promptTokens\": 28,\n   \"totalTokens\": 36\n  }\n }\n}\n"
                    },
                    "index": 23,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603914345.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114601.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150898.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494392.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667938.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788963.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170635.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198388.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285858.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480503.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536030.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702231.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812216.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089549.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234761.02
          }
        ]
      ],
      "hash": "85fd6e7cc3d7fb1082b8cdc14476008ce444a4c0ab9e6149778968deb663dfd7"
    },
    "_meta": {
      "lwt": 1683607234767.23
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "25-xmgpmyccbw"
  },
  {
    "id": "JynPrGy-FO",
    "type": "header",
    "data": {
      "text": "Model + Prompt = LLMChain",
      "level": 2
    },
    "index": 24,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "JynPrGy-FO",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 24,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683603925845.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Model + Prompt = LLMChain",
                      "level": 2
                    },
                    "index": 24,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603931897.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114601.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150899.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494393.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667938.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788963.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170636.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198388.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285859.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480503.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536030.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702231.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812216.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089550.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234761.03
          }
        ]
      ],
      "hash": "b985d91d46a4b66ba026ac1fc5d4dda79225cef2f039788223238aaf18d3aa37"
    },
    "_meta": {
      "lwt": 1683607234767.24
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "17-xmgpmyccbw"
  },
  {
    "id": "USLaYYxMfE",
    "type": "code",
    "data": {
      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
      "language": "javascript",
      "output": "J'adore la programmation.\nBonjour de Londres, comment allez-vous aujourd'hui?\n{\n \"text\": \"As an AI language model, I don't have access to your location information. Can I help you with anything else?\"\n}\n"
    },
    "index": 25,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "USLaYYxMfE",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683603933733.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603938145.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603939129.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603946769.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603947721.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603951193.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint(responseB)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603952865.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint(responseB.text)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603959905.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint(responseB.text+\"\\\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603961217.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint(responseB.text+\"\\n\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603962569.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint(responseB.text+\"\\n\")\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603967241.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603980305.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603982521.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\n\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603988329.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nresponseD\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604002009.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\n\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604002521.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseB.text+\"\\n\")\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604005745.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604008289.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604021249.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat,\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604024369.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114601.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150899.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604209433.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494393.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604774409.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604775370.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">ReferenceError: translationPrompt is not defined</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604780089.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const\n  chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">ReferenceError: translationPrompt is not defined</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604792626.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">ReferenceError: translationPrompt is not defined</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604793535.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604794577.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604796680.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604827058.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604831913.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604837977.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  \n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604839721.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604840609.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604842809.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604849430.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n<pre class=\"py-error wrap\">Error: Missing value for input variable `input_language`</pre>"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604851825.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604853553.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\n"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604855737.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\nBonjour de Londres, comment allez-vous aujourd'hui?\n"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604856977.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst translationPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n  ),\n  HumanMessagePromptTemplate.fromTemplate(\"{text}\"),\n]);\n\nconst chain = new LLMChain({\n  prompt: translationPrompt,\n  llm: chat\n});\nconst responseB = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"I love programming.\",\n});\n\nprint(responseB.text+\"\\n\")\n\nconst responseD = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"hi from London, how are you doing today\",\n});\n\nprint(responseD.text+\"\\n\")\n\nconst responseE = await chain.call({\n  input_language: \"English\",\n  output_language: \"French\",\n  text: \"Do you know where I am?\",\n});\n\nresponseE",
                      "language": "javascript",
                      "output": "J'adore la programmation.\nBonjour de Londres, comment allez-vous aujourd'hui?\n{\n \"text\": \"As an AI language model, I don't have access to your location information. Can I help you with anything else?\"\n}\n"
                    },
                    "index": 25,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604858929.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667938.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788963.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170636.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198388.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285859.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480503.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536031.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702231.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812216.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089550.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234762.01
          }
        ]
      ],
      "hash": "523a494bc2904a3fa29ae7d4b9d5cad76b21970366601952709e0bfa0d6a5b33"
    },
    "_meta": {
      "lwt": 1683607234767.25
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "55-xmgpmyccbw"
  },
  {
    "id": "8wk0D71HUS",
    "type": "header",
    "data": {
      "text": "Agents: Dynamically Run Chains Based on User Input",
      "level": 2
    },
    "index": 26,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "8wk0D71HUS",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 26,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683604213195.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Agents: Dynamically Run Chains Based on User Input",
                      "level": 2
                    },
                    "index": 26,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604220481.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494393.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667938.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788964.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170636.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198389.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285859.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480504.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536032.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702232.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812218.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089550.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234762.02
          }
        ]
      ],
      "hash": "8e0cfd8599b07360ccfb22451462fdc7b206b6189a5240a2b01ff4bfacb528b3"
    },
    "_meta": {
      "lwt": 1683607234767.26
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "15-xmgpmyccbw"
  },
  {
    "id": "2Sesf0vITX",
    "type": "code",
    "data": {
      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 }), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
      "language": "javascript",
      "output": "The current population of Canada as of 2023 is 38,681,797."
    },
    "index": 27,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "2Sesf0vITX",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683604224486.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI(), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604231681.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI(), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604235233.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(pSERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI(), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604271577.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(process.env.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI(), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604272113.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI(), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604276433.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI(), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604307457.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 }), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": "<pre class=\"py-error wrap\">Error: (Azure) OpenAI API key not found</pre>"
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604327194.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 }), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604330705.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "// Define the list of tools the agent can use\nconst tools = [\n  new SerpAPI(environment.SERPAPI_API_KEY, {\n    location: \"Austin,Texas,United States\",\n    hl: \"en\",\n    gl: \"us\",\n  }),\n];\n// Create the agent from the chat model and the tools\nconst agent = ChatAgent.fromLLMAndTools(new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 }), tools);\n// Create an executor, which calls to the agent until an answer is found\nconst executor = AgentExecutor.fromAgentAndTools({ agent, tools });\n\nconst responseG = await executor.run(\n  \"How many people live in canada as of 2023?\"\n);\nresponseG",
                      "language": "javascript",
                      "output": "The current population of Canada as of 2023 is 38,681,797."
                    },
                    "index": 27,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604344409.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494393.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667938.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788964.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170636.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198391.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285859.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480504.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536032.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702232.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812219.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089550.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234762.03
          }
        ]
      ],
      "hash": "488b65c53f055d49e38e7fe5bc65f9a8425201d8493a4ad1149ad2cac68c1af6"
    },
    "_meta": {
      "lwt": 1683607234767.27
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "23-xmgpmyccbw"
  },
  {
    "id": "O8yXA4PXgk",
    "type": "header",
    "data": {
      "text": "Memory: Add State to Chains and Agents",
      "level": 2
    },
    "index": 28,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "O8yXA4PXgk",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 28,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683604367406.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Memory: Add State to Chains and Agents",
                      "level": 2
                    },
                    "index": 28,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604370342.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494394.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667939.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788964.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170637.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198392.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285860.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480505.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536033.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702232.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812219.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089551.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234763.01
          }
        ]
      ],
      "hash": "8e0cfd8599b07360ccfb22451462fdc7b206b6189a5240a2b01ff4bfacb528b3"
    },
    "_meta": {
      "lwt": 1683607234767.28
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "15-xmgpmyccbw"
  },
  {
    "id": "uYQc5IdUWY",
    "type": "code",
    "data": {
      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
      "language": "javascript",
      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"Hello my name is Charlie and I live in Mexico\"\n\"GPT: Hello Charlie! It's nice to meet you. I'm an AI language model. How can I assist you today?\"\n\"What is my name and where do I live?\"\n\"GPT: Your name is Charlie and you live in Mexico.\"\n"
    },
    "index": 29,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "uYQc5IdUWY",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683604371808.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604376241.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\nchatPrompt",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604380769.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\n",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604405145.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput()",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604406409.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604406961.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"You \")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604408561.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"You\")",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604409369.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"You\").pipe(\n  \n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604414809.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"You\").pipe(\n  map(x => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604416801.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(x => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604421449.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query!\").pipe(\n  map(x => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604422321.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(x => )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604423289.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(x => chain.call())\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604430057.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(x => chain.call({}))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604431713.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494394.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(x => chain.call({i}))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604559153.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(x => chain.call({input}))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604560945.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  map(input => chain.call({input}))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604564049.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input}))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604566737.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604568673.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604576937.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">Uncaught TypeError: _this2.llm.generatePrompt is not a function\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604584273.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">Uncaught TypeError: _this2.llm.generatePrompt is not a function\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604908618.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604941817.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604942969.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">{\n \"response\": \"Hello! I'm an AI language model, so I don't have feelings like humans do, but I'm functioning properly and ready to assist you. How can I help you today?\"\n}\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604952713.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => x.response)\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">{\n \"response\": \"Hello! I'm an AI language model, so I don't have feelings like humans do, but I'm functioning properly and ready to assist you. How can I help you today?\"\n}\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604962561.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">{\n \"response\": \"Hello! I'm an AI language model, so I don't have feelings like humans do, but I'm functioning properly and ready to assist you. How can I help you today?\"\n}\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604963961.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">{\n \"response\": \"Hello! I'm an AI language model, so I don't have feelings like humans do, but I'm functioning properly and ready to assist you. How can I help you today?\"\n}\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605031505.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">{\n \"response\": \"Hello! I'm an AI language model, so I don't have feelings like humans do, but I'm functioning properly and ready to assist you. How can I help you today?\"\n}\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605032033.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605034961.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605036422.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"GPT: Hello! How can I assist you today?\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605042097.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605138561.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605139568.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"GPT: Hello Charlie! It's nice to meet you. I'm an AI language model designed to have conversations with people. How can I assist you today?\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605154137.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"GPT: Hello Charlie! It's nice to meet you. I'm an AI language model designed to have conversations with people. How can I assist you today?\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605166249.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605170210.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605171290.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"Hello my name is Charlie and I live in Mexico\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605182841.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"Hello my name is Charlie and I live in Mexico\"\n\"GPT: Hello Charlie! It's nice to meet you. I'm an AI language model. How can I assist you today?\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605184841.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"Hello my name is Charlie and I live in Mexico\"\n\"GPT: Hello Charlie! It's nice to meet you. I'm an AI language model. How can I assist you today?\"\n\"What is my name and where do I live?\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605217201.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const chat = new ChatOpenAI({ openAIApiKey: environment.openAIApiKey, temperature: 0.2 });\n\nconst chatPrompt = ChatPromptTemplate.fromPromptMessages([\n  SystemMessagePromptTemplate.fromTemplate(\n    \"The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\"\n  ),\n  new MessagesPlaceholder(\"history\"),\n  HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n]);\n\nconst chain = new ConversationChain({\n  memory: new BufferMemory({ returnMessages: true, memoryKey: \"history\" }),\n  prompt: chatPrompt,\n  llm: chat,\n});\n\ninput(\"Write your query\").pipe(\n  display,\n  concatMap(input => chain.call({input})),\n  map(x => \"GPT: \"+x.response),\n  display\n)",
                      "language": "javascript",
                      "output": "<input class=\"prompt cdx-input\" placeholder=\"Write your message\" type=\"text\">\"Hello my name is Charlie and I live in Mexico\"\n\"GPT: Hello Charlie! It's nice to meet you. I'm an AI language model. How can I assist you today?\"\n\"What is my name and where do I live?\"\n\"GPT: Your name is Charlie and you live in Mexico.\"\n"
                    },
                    "index": 29,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605218985.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667939.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788965.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170637.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198392.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285860.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480505.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536033.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702233.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812219.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089551.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 29
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234763.02
          }
        ]
      ],
      "hash": "df1dfd545f1e9a0448f52e5f1e1c16cdc207e93cae15d89b923a36e21ac4c634"
    },
    "_meta": {
      "lwt": 1683607234767.29
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "56-xmgpmyccbw"
  },
  {
    "id": "PumjBvKo-D",
    "type": "header",
    "data": {
      "text": "Replication",
      "level": 1
    },
    "index": 30,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "PumjBvKo-D",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 2,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683599929578.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Replication",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599932369.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Replication",
                      "level": 1
                    },
                    "index": 2,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599934473.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 10
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373492.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618256.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662681.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792707.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551968.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 16
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606310.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207566.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235334.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 20
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267471.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794905.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114601.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 26
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150899.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494394.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667939.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788966.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170637.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198392.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285861.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480506.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536035.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702233.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812220.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089551.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 30
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234764.01
          }
        ]
      ],
      "hash": "c6770df7748930124ed5e56b6f92121d4ba05119489b06c29c4a0bb114a7a0f0"
    },
    "_meta": {
      "lwt": 1683607234767.3
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "69-xmgpmyccbw"
  },
  {
    "id": "JUky45cDCw",
    "type": "code",
    "data": {
      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
      "language": "javascript",
      "output": ""
    },
    "index": 31,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "JUky45cDCw",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683599936504.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const model = new OpenAI({ openAIApiKey: \"\", temperature: 0.6 });\nconst res = await model.call(\n  \"What would be a good company name a company that makes colorful socks?\"\n);\nres",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599951129.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683599951865.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 11
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373493.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\nreturn editor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/1-server-replication.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600534881.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/1-server-replication.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600537601.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/7-server-replication.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600540537.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/-server-replication.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600541425.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-server-replication.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600541908.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600544793.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-l.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600552145.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat: remove dead code\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600553890.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat: remove dead cod\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600554617.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat: \",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600555897.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(): \",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600557849.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): \",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600559249.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): we\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600561665.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): we a\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600562297.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): we are woki\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600564521.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): we are wok\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600565065.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): we are work\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600566073.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): we are wor\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600566761.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implemen\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600569545.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement \",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600571761.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on Eva\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600574945.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600579449.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                                      .replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600600241.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\"))))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600602945.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                                    )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600603905.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                        )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600605321.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600606409.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600610506.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600615769.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600616521.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 12,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600618977.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618256.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662681.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 14
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792708.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                                     .replaceAll(environment.openAIApiKey, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 14,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601962777.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 14,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601964921.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 14,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601970809.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551968.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 17
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606310.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207566.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235335.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 22
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267471.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 24
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794906.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114602.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 27
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150900.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494394.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667939.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788966.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170638.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198393.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285861.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480506.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536035.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702233.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812221.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089552.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 31
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234764.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607368297.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607381774.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607384131.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607444558.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607446627.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"environment.GITHUB_TOKENE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607454954.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607456499.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\nE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607460667.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"REPLACE YOUR TOKEN HERE\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607461202.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\n\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607462474.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607470826.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607473267.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607475338.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\n\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607505611.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607506443.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"ghp_JUxPpynYoevtsGU92onvwB1lmk18Vn4B4ym\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607507315.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": "Uncaught Error: Error while fetching the file\n"
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607509219.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "environment.GITHUB_TOKEN = environment.GITHUB_TOKEN || \"\"\nawait environment.wait()\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content => \n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2)\n                              .replaceAll(environment.GITHUB_TOKEN, \"\")\n                              .replaceAll(environment.openAIApiKey, \"\")\n                              .replaceAll(environment.SERPAPI_API_KEY, \"\")\n                          )))\n  ),\n    commitOnGitHub({\n      owner: \"sanchezcarlosjr\",\n      repo: \"computer-vision-and-graphics\",\n      filePath: \"assets/evanotebooks/8-langchain.json\",\n      commitMessage: \"feat(AI): implement langchain on EvaNotebook environment\",\n      GITHUB_TOKEN: environment.GITHUB_TOKEN\n    })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 31,
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607533121.01
          }
        ]
      ],
      "hash": "afc75ab78f60ec803212d0f5257b4b7dc79b6107e5951ee4a746a5dfc27797a7"
    },
    "_meta": {
      "lwt": 1683607533130.01
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "122-xmgpmyccbw"
  },
  {
    "id": "T952StPmHd",
    "type": "paragraph",
    "data": {
      "text": ""
    },
    "index": 32,
    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4",
    "crdts": {
      "operations": [
        [
          {
            "creator": "zjelilgzdf",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "T952StPmHd",
                    "type": "paragraph",
                    "data": {
                      "text": ""
                    },
                    "index": 1,
                    "createdBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "topic": "76ab68f8-7f5e-4e07-a8f2-a297d2c277c4"
                  }
                }
              }
            ],
            "time": 1683599897579.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 12
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683600373493.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601618259.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 13
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601662681.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 15
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683601792708.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602551968.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 18
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683602606310.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603207568.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603235336.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 23
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603267472.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 25
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683603794906.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604114602.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 28
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604150901.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683604494395.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605667940.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683605788967.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606170638.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606198393.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606285862.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606480506.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606536037.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606702234.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683606812222.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607089552.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "1ce13fe9-c80f-4f8a-a6df-d7831c704e6c",
                    "index": 32
                  }
                }
              }
            ],
            "creator": "zjelilgzdf",
            "time": 1683607234765.01
          }
        ]
      ],
      "hash": "11570bc811bb86324f7f6825c897afcd6e7e89a14feab9fba23ba649bdb79a5b"
    },
    "_meta": {
      "lwt": 1683607234767.32
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "74-xmgpmyccbw"
  }
]