[
  {
    "id": "F9h3k0t9ST",
    "type": "toc",
    "data": {
      "items": [
        {
          "id": "scxkahft9s",
          "reference": "V790qmV3Ym",
          "text": "Track human from image",
          "level": 1
        },
        {
          "id": "2z2jmwx0mg",
          "reference": "wirInDdcHN",
          "text": "Track aliveness human",
          "level": 1
        },
        {
          "id": "3947yaqm5w",
          "reference": "XjqJQcINAA",
          "text": "Track aliveness human with MQTT and EVA",
          "level": 1
        },
        {
          "id": "ifwk5cwiut",
          "reference": "pDqGq08a4s",
          "text": "Replication",
          "level": 1
        }
      ]
    },
    "index": 0,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "F9h3k0t9ST",
                    "type": "toc",
                    "data": {
                      "items": [
                        {
                          "id": "scxkahft9s",
                          "reference": "V790qmV3Ym",
                          "text": "Track human from image",
                          "level": 1
                        },
                        {
                          "id": "2z2jmwx0mg",
                          "reference": "wirInDdcHN",
                          "text": "Track aliveness human",
                          "level": 1
                        },
                        {
                          "id": "3947yaqm5w",
                          "reference": "XjqJQcINAA",
                          "text": "Track aliveness human with MQTT and EVA",
                          "level": 1
                        },
                        {
                          "id": "ifwk5cwiut",
                          "reference": "pDqGq08a4s",
                          "text": "Replication",
                          "level": 1
                        }
                      ]
                    },
                    "index": 0,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856292.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 0
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869272.01
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869274.01
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "sxLXPHuOHE",
    "type": "header",
    "data": {
      "text": "Track human from image",
      "level": 1
    },
    "index": 1,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "sxLXPHuOHE",
                    "type": "header",
                    "data": {
                      "text": "Track human from image",
                      "level": 1
                    },
                    "index": 1,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856421.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 1
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869388.02
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.03
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "Lo2IdbG4oW",
    "type": "code",
    "data": {
      "code": "`<img id=\"webcam\" crossorigin src=\"https://www.gannett-cdn.com/presto/2021/01/27/PMCA/3b34404e-8401-4a6d-9d30-38dbe9a274d4-244ff25c-ef77-4d64-9bbc-d0e64ea6de3e_thumbnail.png?width=1280&height=720&fit=crop&format=pjpg&auto=webp\">`",
      "language": "javascript",
      "output": ""
    },
    "index": 2,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "Lo2IdbG4oW",
                    "type": "code",
                    "data": {
                      "code": "`<img id=\"webcam\" crossorigin src=\"https://www.gannett-cdn.com/presto/2021/01/27/PMCA/3b34404e-8401-4a6d-9d30-38dbe9a274d4-244ff25c-ef77-4d64-9bbc-d0e64ea6de3e_thumbnail.png?width=1280&height=720&fit=crop&format=pjpg&auto=webp\">`",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 2,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 2
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869389.01
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.04
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "1zoO1JhKJt",
    "type": "code",
    "data": {
      "code": "`\n<section>\n<canvas id=\"canvas\"></canvas>\n<script type=\"module\">\n  const canvas = document.getElementById(\"canvas\");\n  const img = document.getElementById('webcam');\n  const ctx = canvas.getContext('2d');\n  canvas.width = img.width;\n  canvas.height = img.height;\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n  ctx.beginPath();\n  ctx.moveTo(img.width/2, 0);\n  ctx.lineTo(img.width/2, img.height);\n  ctx.stroke();\n  import vision from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n  const { FaceLandmarker, FilesetResolver, DrawingUtils } = vision;\n  let faceLandmarker;\n  let runningMode = \"IMAGE\";\n  const filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n  );\n  function calculateCentroid(landmarks) {\n     const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x+acc[0];\n        acc[1] = landmark.y+acc[1];\n        acc[2] = landmark.z+acc[2];\n        return acc;\n     }, [0,0,0]);\n     return sum.map(coord => coord / landmarks.length);\n  }\n  faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n      modelAssetPath: \n      \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n      delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: true,\n    runningMode,\n    numFaces: 1\n  });\n  const centroid = calculateCentroid(faceLandmarker.detect(img).faceLandmarks[0]);\n  const vcentroid = [centroid[0]*img.width,centroid[1]*img.height];\n  ctx.beginPath();\n  ctx.arc(vcentroid[0], vcentroid[1], 10, 0, 2*Math.PI, true);\n  ctx.fill();\n  const visionLine = 0.5;\n  const distance = visionLine-centroid[0];\n  const relativeDistance = Math.abs(distance)/centroid[0];\n  const threshold = 0.7;\n  const action = relativeDistance >= threshold ? \"NONE\" : distance > 0 ? \"left\" : \"right\";\n  alert(action);\n</script>\n</section>\n`",
      "language": "javascript",
      "output": ""
    },
    "index": 3,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "1zoO1JhKJt",
                    "type": "code",
                    "data": {
                      "code": "`\n<section>\n<canvas id=\"canvas\"></canvas>\n<script type=\"module\">\n  const canvas = document.getElementById(\"canvas\");\n  const img = document.getElementById('webcam');\n  const ctx = canvas.getContext('2d');\n  canvas.width = img.width;\n  canvas.height = img.height;\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n  ctx.beginPath();\n  ctx.moveTo(img.width/2, 0);\n  ctx.lineTo(img.width/2, img.height);\n  ctx.stroke();\n  import vision from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n  const { FaceLandmarker, FilesetResolver, DrawingUtils } = vision;\n  let faceLandmarker;\n  let runningMode = \"IMAGE\";\n  const filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n  );\n  function calculateCentroid(landmarks) {\n     const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x+acc[0];\n        acc[1] = landmark.y+acc[1];\n        acc[2] = landmark.z+acc[2];\n        return acc;\n     }, [0,0,0]);\n     return sum.map(coord => coord / landmarks.length);\n  }\n  faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n      modelAssetPath: \n      \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n      delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: true,\n    runningMode,\n    numFaces: 1\n  });\n  const centroid = calculateCentroid(faceLandmarker.detect(img).faceLandmarks[0]);\n  const vcentroid = [centroid[0]*img.width,centroid[1]*img.height];\n  ctx.beginPath();\n  ctx.arc(vcentroid[0], vcentroid[1], 10, 0, 2*Math.PI, true);\n  ctx.fill();\n  const visionLine = 0.5;\n  const distance = visionLine-centroid[0];\n  const relativeDistance = Math.abs(distance)/centroid[0];\n  const threshold = 0.7;\n  const action = relativeDistance >= threshold ? \"NONE\" : distance > 0 ? \"left\" : \"right\";\n  alert(action);\n</script>\n</section>\n`",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.08
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 3
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869389.02
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.05
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "gAE_-j5CYK",
    "type": "header",
    "data": {
      "text": "Track aliveness human",
      "level": 1
    },
    "index": 4,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "gAE_-j5CYK",
                    "type": "header",
                    "data": {
                      "text": "Track aliveness human",
                      "level": 1
                    },
                    "index": 4,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.1
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 4
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869389.03
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.06
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "DhwTf6jyc-",
    "type": "code",
    "data": {
      "code": "import {\n    FaceLandmarker,\n    FilesetResolver,\n    DrawingUtils\n} from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n\nconst filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n);\n\n/* \n   TODO: I think this function introduce a high overhead, so it should be migrated to WASM C.\n*/\nfunction calculateCentroid(landmarks) {\n    const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x + acc[0];\n        acc[1] = landmark.y + acc[1];\n        acc[2] = landmark.z + acc[2];\n        return acc;\n    }, [0, 0, 0]);\n    return sum.map(coord => coord / landmarks.length);\n}\n\nconst faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n        delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: false,\n    runningMode: \"IMAGE\",\n    numFaces: 1\n});\n\n\nconst visionLine = 0.5;\nconst threshold = 0.2;\n\ncaptureStream().pipe(\n  throttleTime(1000),\n  map(({message: img}) => {\n    const faceLandmarks = faceLandmarker.detect(img).faceLandmarks;\n    if (faceLandmarks.length === 0)\n        return \"c\";\n    const [x,y,z] = calculateCentroid(faceLandmarks[0]);\n    const distance = visionLine-x;\n    const relativeDistance = Math.abs(distance)/x;\n    return relativeDistance <= threshold ? \"NONE\" : distance > 0 ? \"l\" : \"r\";\n  }),\n  rewrite()\n)",
      "language": "javascript",
      "output": "NONE"
    },
    "index": 5,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "DhwTf6jyc-",
                    "type": "code",
                    "data": {
                      "code": "import {\n    FaceLandmarker,\n    FilesetResolver,\n    DrawingUtils\n} from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n\nconst filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n);\n\n/* \n   TODO: I think this function introduce a high overhead, so it should be migrated to WASM C.\n*/\nfunction calculateCentroid(landmarks) {\n    const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x + acc[0];\n        acc[1] = landmark.y + acc[1];\n        acc[2] = landmark.z + acc[2];\n        return acc;\n    }, [0, 0, 0]);\n    return sum.map(coord => coord / landmarks.length);\n}\n\nconst faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n        delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: false,\n    runningMode: \"IMAGE\",\n    numFaces: 1\n});\n\n\nconst visionLine = 0.5;\nconst threshold = 0.2;\n\ncaptureStream().pipe(\n  throttleTime(1000),\n  map(({message: img}) => {\n    const faceLandmarks = faceLandmarker.detect(img).faceLandmarks;\n    if (faceLandmarks.length === 0)\n        return \"c\";\n    const [x,y,z] = calculateCentroid(faceLandmarks[0]);\n    const distance = visionLine-x;\n    const relativeDistance = Math.abs(distance)/x;\n    return relativeDistance <= threshold ? \"NONE\" : distance > 0 ? \"l\" : \"r\";\n  }),\n  rewrite()\n)",
                      "language": "javascript",
                      "output": "NONE"
                    },
                    "index": 5,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.12
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 5
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869389.04
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.07
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "o9i6KRRs2Z",
    "type": "header",
    "data": {
      "text": "Track aliveness human with MQTT and EVA",
      "level": 1
    },
    "index": 6,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "o9i6KRRs2Z",
                    "type": "header",
                    "data": {
                      "text": "Track aliveness human with MQTT and EVA",
                      "level": 1
                    },
                    "index": 6,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.14
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 6
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869389.05
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.08
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "7SDx1hrO53",
    "type": "code",
    "data": {
      "code": "import {\n    FaceLandmarker,\n    FilesetResolver,\n    DrawingUtils\n} from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n\nconst filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n);\n\n/* \n   TODO: I think this function introduce a high overhead, so it should be migrated to WASM C.\n*/\nfunction calculateCentroid(landmarks) {\n    const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x + acc[0];\n        acc[1] = landmark.y + acc[1];\n        acc[2] = landmark.z + acc[2];\n        return acc;\n    }, [0, 0, 0]);\n    return sum.map(coord => coord / landmarks.length);\n}\n\nconst faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n        delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: false,\n    runningMode: \"IMAGE\",\n    numFaces: 1\n});\n\n\nconst visionLine = 0.5;\nconst threshold = 0.2;\n\nconnect(\"MQTT\", {\n      hostname: \"\",\n      port: 443,  \n      path: '/', \n      topic: 'eva/camera/image',\n      protocol: \"wss\",\n      username: \"\", \n      password: \"\"\n}).pipe(\n  throttleTime(1000),\n  base64ToBlob(),\n  blobToImage,\n  tap(({message: img, configuration}) => {\n    const faceLandmarks = faceLandmarker.detect(img).faceLandmarks;\n    if (faceLandmarks.length === 0) {\n      configuration.connection.send({topic: \"eva/neck/animation\", message: \"c\"});\n      return;\n    }\n    const [x,y,z] = calculateCentroid(faceLandmarks[0]);\n    const distance = visionLine-x;\n    const relativeDistance = Math.abs(distance)/x;\n    if (relativeDistance <= threshold)\n      return;\n    configuration.connection.send({topic: \"eva/neck/animation\", message:  distance > 0 ? \"l\" : \"r\"});\n  })\n)",
      "language": "javascript",
      "output": ""
    },
    "index": 7,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "7SDx1hrO53",
                    "type": "code",
                    "data": {
                      "code": "import {\n    FaceLandmarker,\n    FilesetResolver,\n    DrawingUtils\n} from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n\nconst filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n);\n\n/* \n   TODO: I think this function introduce a high overhead, so it should be migrated to WASM C.\n*/\nfunction calculateCentroid(landmarks) {\n    const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x + acc[0];\n        acc[1] = landmark.y + acc[1];\n        acc[2] = landmark.z + acc[2];\n        return acc;\n    }, [0, 0, 0]);\n    return sum.map(coord => coord / landmarks.length);\n}\n\nconst faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n        delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: false,\n    runningMode: \"IMAGE\",\n    numFaces: 1\n});\n\n\nconst visionLine = 0.5;\nconst threshold = 0.2;\n\nconnect(\"MQTT\", {\n      hostname: \"\",\n      port: 443,  \n      path: '/', \n      topic: 'eva/camera/image',\n      protocol: \"wss\",\n      username: \"\", \n      password: \"\"\n}).pipe(\n  throttleTime(1000),\n  base64ToBlob(),\n  blobToImage,\n  tap(({message: img, configuration}) => {\n    const faceLandmarks = faceLandmarker.detect(img).faceLandmarks;\n    if (faceLandmarks.length === 0) {\n      configuration.connection.send({topic: \"eva/neck/animation\", message: \"c\"});\n      return;\n    }\n    const [x,y,z] = calculateCentroid(faceLandmarks[0]);\n    const distance = visionLine-x;\n    const relativeDistance = Math.abs(distance)/x;\n    if (relativeDistance <= threshold)\n      return;\n    configuration.connection.send({topic: \"eva/neck/animation\", message:  distance > 0 ? \"l\" : \"r\"});\n  })\n)",
                      "language": "javascript",
                      "output": "Uncaught InvalidCharacterError: Failed to execute 'atob' on 'WorkerGlobalScope': The string to be decoded is not correctly encoded.\n"
                    },
                    "index": 7,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850395.16
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "import {\n    FaceLandmarker,\n    FilesetResolver,\n    DrawingUtils\n} from \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0\";\n\nconst filesetResolver = await FilesetResolver.forVisionTasks(\n    \"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\"\n);\n\n/* \n   TODO: I think this function introduce a high overhead, so it should be migrated to WASM C.\n*/\nfunction calculateCentroid(landmarks) {\n    const sum = landmarks.reduce((acc, landmark) => {\n        acc[0] = landmark.x + acc[0];\n        acc[1] = landmark.y + acc[1];\n        acc[2] = landmark.z + acc[2];\n        return acc;\n    }, [0, 0, 0]);\n    return sum.map(coord => coord / landmarks.length);\n}\n\nconst faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\n    baseOptions: {\n        modelAssetPath: \"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",\n        delegate: \"GPU\"\n    },\n    outputFaceBlendshapes: false,\n    runningMode: \"IMAGE\",\n    numFaces: 1\n});\n\n\nconst visionLine = 0.5;\nconst threshold = 0.2;\n\nconnect(\"MQTT\", {\n      hostname: \"\",\n      port: 443,  \n      path: '/', \n      topic: 'eva/camera/image',\n      protocol: \"wss\",\n      username: \"\", \n      password: \"\"\n}).pipe(\n  throttleTime(1000),\n  base64ToBlob(),\n  blobToImage,\n  tap(({message: img, configuration}) => {\n    const faceLandmarks = faceLandmarker.detect(img).faceLandmarks;\n    if (faceLandmarks.length === 0) {\n      configuration.connection.send({topic: \"eva/neck/animation\", message: \"c\"});\n      return;\n    }\n    const [x,y,z] = calculateCentroid(faceLandmarks[0]);\n    const distance = visionLine-x;\n    const relativeDistance = Math.abs(distance)/x;\n    if (relativeDistance <= threshold)\n      return;\n    configuration.connection.send({topic: \"eva/neck/animation\", message:  distance > 0 ? \"l\" : \"r\"});\n  })\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 7,
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304865697.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 7
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869389.06
          }
        ]
      ],
      "hash": "0f44d93e6b3e55202ad5742a37ef1989e58ed497ba06d1d452520bcca093ce22"
    },
    "_meta": {
      "lwt": 1684304869390.09
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "4-zxpfmtbxam"
  },
  {
    "id": "IFTDfoOXQb",
    "type": "header",
    "data": {
      "text": "Replication",
      "level": 1
    },
    "index": 8,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "IFTDfoOXQb",
                    "type": "header",
                    "data": {
                      "text": "Replication",
                      "level": 1
                    },
                    "index": 8,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850396.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.07
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 8
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869390.01
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.1
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  },
  {
    "id": "EWrIE6Gc7y",
    "type": "code",
    "data": {
      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/9-track-human-real-time.json\",\n    commitMessage: \"feat: send action over MQTT\",\n    GITHUB_TOKEN: environment.GITHUB_TOKEN\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
      "language": "javascript",
      "output": ""
    },
    "index": 9,
    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "EWrIE6Gc7y",
                    "type": "code",
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/9-track-human-real-time.json\",\n    commitMessage: \"feat: send action over MQTT\",\n    GITHUB_TOKEN: environment.GITHUB_TOKEN\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(environment.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 9,
                    "createdBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "topic": "6c198dec-ec8a-4f9a-88ae-04424b2958eb"
                  }
                }
              }
            ],
            "time": 1684304850396.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304856422.08
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "lastEditedBy": "fabfcc11-7ef0-4b3e-ac05-6dfc3a186b2d",
                    "index": 9
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1684304869390.02
          }
        ]
      ],
      "hash": "a45ab56e61b2b3ead25c95496b2f4fc6ac75660603f10125c2a4735c83756586"
    },
    "_meta": {
      "lwt": 1684304869390.11
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-zxpfmtbxam"
  }
]