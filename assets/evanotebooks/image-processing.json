[
  {
    "id": "wlaoUCOBkd",
    "type": "header",
    "data": {
      "text": "Autosaving",
      "level": 2
    },
    "index": 0,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "wlaoUCOBkd",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 0,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698421037.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Autosaving",
                      "level": 2
                    },
                    "index": 0,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698423998.01
          }
        ]
      ],
      "hash": "1757d16dbb9cdc7c88419f358171c33cb3863037adce2200975348f2db0823f6"
    },
    "_meta": {
      "lwt": 1682698423998.02
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "3-rgmxmqcfms"
  },
  {
    "id": "FRBHkujP-G",
    "type": "code",
    "data": {
      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
      "language": "javascript",
      "output": ""
    },
    "index": 1,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "FRBHkujP-G",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698429479.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/share-memory.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698430125.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698443820.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/save-.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698445820.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/save-your.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698449093.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/save-you.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698449636.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/save-your.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698451772.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/save-you.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698452308.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/s.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698453068.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698456148.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Share memory with your peer\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698459180.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698460788.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Open your \",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698464516.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Open your web\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698466196.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Open your webca\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698466828.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Open your webc\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698467340.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698468820.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Use Media\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698471244.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Use MediaP\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698471844.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Use MediaPipe\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698472732.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Ap MediaPipe\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698474996.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698475844.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe \",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698478692.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your \",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698481684.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your we\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698482876.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and \",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698484693.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your \",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698500668.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with \",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698505452.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698506836.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  importOpenCV\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698736836.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  importOpenCV()\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698737556.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  importOpenCV(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698738404.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  importOpenCV(x => 1),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698740868.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  importOpenCV(x => ),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698741821.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  \n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698743460.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/image-processing.json\",\n    commitMessage: \"Apply MediaPipe models, open your webcam and write your algoritms with OpenCV\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 1,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698744332.06
          }
        ]
      ],
      "hash": "e41f288c938e8a83fa7227a308dba1d00fa99e468a93fc6878117985ce54b841"
    },
    "_meta": {
      "lwt": 1682698744332.07
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "37-rgmxmqcfms"
  },
  {
    "id": "R4g_a5Du9a",
    "type": "header",
    "data": {
      "text": "Open your webcam (or whatever image stream)",
      "level": 2
    },
    "index": 2,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "R4g_a5Du9a",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 2,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698433220.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your notebook",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698439460.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698511076.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (you)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698516172.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (your strea)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698517684.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (your stream)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698518556.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (your strea)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698519244.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (your image stream)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698523172.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (or wayour image stream)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698528020.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (or whateveryour image stream)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698530252.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (or whatever your image stream)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698531932.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Open your webcam (or whatever image stream)",
                      "level": 2
                    },
                    "index": 2,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698535005.01
          }
        ]
      ],
      "hash": "3a1376fd4a5e47125adddb2cf9cdb633588abe409ac9b6d1db9d01560497d4df"
    },
    "_meta": {
      "lwt": 1682698535005.02
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "13-rgmxmqcfms"
  },
  {
    "id": "mP07GtjkgW",
    "type": "code",
    "data": {
      "code": "captureStream().pipe(\n  imshow()\n)",
      "language": "javascript",
      "output": ""
    },
    "index": 3,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "mP07GtjkgW",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698537991.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "const options = {\n    owner: \"sanchezcarlosjr\",\n    repo: \"computer-vision-and-graphics\",\n    filePath: \"assets/evanotebooks/share-memory.json\",\n    commitMessage: \"Share memory with your peers\",\n    GITHUB_TOKEN: \"\"\n}\n\neditor.blocks.get$.pipe(\n  first(),\n  map(content =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(content, null, 2).replaceAll(options.GITHUB_TOKEN, \"\"))))),\n  commitOnGitHub(options)\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698539076.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698540348.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "editor.",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698542172.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698543692.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698570300.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream.",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698572764.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream.pipe(\n  \n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698574244.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream.pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698577932.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream.pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": "<canvas></canvas><pre class=\"py-error\">TypeError: captureStream.pipe is not a function</pre>"
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698578612.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698582620.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": "<canvas></canvas>"
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698583356.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698585188.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 3,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698590652.01
          }
        ]
      ],
      "hash": "46ccf810628eb825608d2c1498661ba8474a1b2bb7d50bad301749c1a95b1e5b"
    },
    "_meta": {
      "lwt": 1682698590652.02
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "15-rgmxmqcfms"
  },
  {
    "id": "NDEQydY8Is",
    "type": "header",
    "data": {
      "text": "Transform your image stream to gray scales",
      "level": 2
    },
    "index": 4,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "NDEQydY8Is",
                    "type": "header",
                    "data": {
                      "text": "",
                      "level": 2
                    },
                    "index": 4,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698646520.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Apply&nbsp;",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698649964.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform&nbsp;",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698655076.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform the&nbsp;",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698656836.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform&nbsp;",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698657940.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform to gray",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698659676.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform your&nbsp;",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698662748.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform your image stream to gray&nbsp;",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698668828.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "text": "Transform your image stream to gray scales",
                      "level": 2
                    },
                    "index": 4,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698670396.01
          }
        ]
      ],
      "hash": "5d1cec8a8e17d24c529476fb3913efe43a3606ccc685b0977dc312fd01b4ba4f"
    },
    "_meta": {
      "lwt": 1682698670396.02
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "10-rgmxmqcfms"
  },
  {
    "id": "ppj2tO-btP",
    "type": "code",
    "data": {
      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
      "language": "javascript",
      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
    },
    "index": 5,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "ppj2tO-btP",
                    "type": "code",
                    "data": {
                      "code": "",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698678324.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow()\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698689148.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  importOpenCV(x => ),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698750420.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  \n  importOpenCV(x => ),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698752260.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  switchMap()\n  importOpenCV(x => ),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698760004.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap()\n  importOpenCV(x => ),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698762628.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    \n  )\n  importOpenCV(x => ),\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698763460.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698767020.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698767492.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698771772.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    strea \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698772892.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698773820.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => {} \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698776116.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => {\n      \n    } \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698777316.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => {\n      importOpenCV(x => ),\n    } \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698778340.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => {\n      \n    } \n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698779260.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => importOpenCV(x => ),\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698781844.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => importOpenCV(x => )\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698783732.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n    stream => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698785332.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698787996.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(     => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698789620.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap((stream)     => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698790804.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(({})     => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698792948.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(({mess})     => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698794012.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(({message})     => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698795164.03
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(({message}) => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698799508.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     ({message}) => importOpenCV(x => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698801900.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     ({message}) => importOpenCV(cv => x)\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698823692.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698825596.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698827196.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698829124.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698850341.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  \n  concatMap(\n     ({message}) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698930540.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698931764.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow()\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698932228.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(\n     ({message}) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698932924.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(\n     ({message) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698935412.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(\n     (context) => importOpenCV(cv => {\n       cv.\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698937756.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(\n     (context) => importOpenCV(cv => {\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698939308.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(\n     (context => importOpenCV(cv => {\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698941740.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(\n     context => importOpenCV(cv => {\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698942412.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(context => importOpenCV(cv => {\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698943084.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(context => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698944108.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(context => importOpenCV(cv => {\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698944668.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(context => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698945436.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(context => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698947412.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698955044.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, ctx.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698957220.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, ctx..height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698957772.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, ctx.canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698959844.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.widt, ctx.canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698963004.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, canvas.width, ctx.canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698964668.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698966972.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698969561.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n    let src = cv.matFromImageData(imgData);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698979844.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682698980604.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699008954.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n    \n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699013930.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       \n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699014947.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n// scale and shift are used to map the data to [0, 255].\nsrc.convertTo(dst, cv.CV_8U, scale, shift);\n// *** is GRAY, RGB, or RGBA, according to src.channels() is 1, 3 or 4.\ncv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699043620.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift);\n// *** is GRAY, RGB, or RGBA, according to src.channels() is 1, 3 or 4.\ncv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699047868.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift);\ncv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699049548.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n    \ncv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699050468.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n     \ncv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699052212.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n     cv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699052682.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n    \n    cv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699053435.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n  \n    cv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699055180.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\ncv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699056796.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n         cv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699057628.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n       cv.cvtColor(dst, dst, cv.COLOR_***2RGBA);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699059132.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n       cv.cvtColor(dst, dst, cv.COLOR_***2RGB);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699061971.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat();\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n       cv.cvtColor(dst, dst, );\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699063532.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       src.convertTo(dst, cv.CV_8U, scale, shift)\n       cv.cvtColor(dst, dst, );\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699078693.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(dst, dst, );\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699080405.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699103481.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n    let imgData = new ImageData(new Uint8ClampedArray(dst.data, dst.cols, dst.rows);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699127796.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       let imgData = new ImageData(new Uint8ClampedArray(dst.data, dst.cols, dst.rows);\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699128916.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       let imgData = new ImageData(new Uint8ClampedArray(dst.data, dst.cols, dst.rows);\n    ctx.putImageData(imgData, 0, 0)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699144316.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       let imgData = new ImageData(new Uint8ClampedArray(dst.data, dst.cols, dst.rows);\n       ctx.putImageData(imgData, 0, 0)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699145220.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       let imgData = new ImageData(new Uint8ClampedArray(dst.data, dst.cols, dst.rows);\n       ctx.putImageData(imgData, 0, 0)\n       cv.imshow('canvasOutput', dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699158340.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n\n       cv.imshow('canvasOutput', dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699165293.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow('canvasOutput', dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699165849.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx., dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699189132.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699191756.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699196232.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV(cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699196988.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  )\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699207797.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699212076.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe()\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699212647.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    concatMap()\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699218796.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    concatMap(cv =)\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699220324.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    concatMap(cv => )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699221069.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    concatMap(cv => {})\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699221985.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap(cv => {})\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699226764.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap(cv => {\n      (cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  )\n    })\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699227979.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap(cv => {\n      \n    })\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699229372.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap(cv => {\n      (cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  )\n    })\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699229934.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap(cv => {\n      \n    })\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699232102.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n  ))\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699234164.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: importOpenCV is not a function\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699236332.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699238404.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699239218.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.height.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'height')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699243004.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'height')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699249572.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699250853.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699251661.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699252292.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       console.log()\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699260764.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699261299.04
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699262122.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699263420.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx.)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699268164.02
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699269785.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(ctx} => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699275925.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap([ctx} => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699277521.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap({ctx} => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699278684.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({ctx} => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699280027.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({ctx}_ => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699280623.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699281597.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:}) => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699283988.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught TypeError: Cannot read properties of undefined (reading 'width')\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699286221.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699287837.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       console.log(ctx)\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699288996.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699301438.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699302596.06
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699337038.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699338236.05
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught Error: Please input the valid canvas element or id.\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699339900.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>Uncaught Error: Please input the valid canvas element or id.\n"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699342120.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": ""
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699343679.01
          }
        ],
        [
          {
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "data": {
                      "code": "captureStream().pipe(\n  imshow(),\n  concatMap(({message:ctx}) => importOpenCV.pipe(\n    tap((cv => {\n       let imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height)\n       let src = cv.matFromImageData(imgData)\n       let dst = new cv.Mat()\n       cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY)\n       cv.imshow(ctx.canvas, dst)\n     })\n   )\n  ))\n)",
                      "language": "javascript",
                      "output": "<canvas width=\"640\" height=\"480\"></canvas>"
                    },
                    "index": 5,
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "_deleted": false
                  }
                }
              }
            ],
            "creator": "pkhexmkwbs",
            "time": 1682699344805.05
          }
        ]
      ],
      "hash": "9e8508be3752b5457d60b81e46e98e9a3b9f856ac806dc25a1cbbd9cf5d7f104"
    },
    "_meta": {
      "lwt": 1682699344810.01
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "133-rgmxmqcfms"
  },
  {
    "id": "DYdM7xJNzK",
    "type": "paragraph",
    "data": {
      "text": ""
    },
    "index": 7,
    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b",
    "crdts": {
      "operations": [
        [
          {
            "creator": "pkhexmkwbs",
            "body": [
              {
                "ifMatch": {
                  "$set": {
                    "id": "DYdM7xJNzK",
                    "type": "paragraph",
                    "data": {
                      "text": ""
                    },
                    "index": 6,
                    "createdBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "lastEditedBy": "215b4c3a-a938-4d07-a13e-a469bbdd4a71",
                    "topic": "121115cd-0ba8-431e-9cfc-4edaab00277b"
                  }
                }
              }
            ],
            "time": 1682698681146.02
          }
        ]
      ],
      "hash": "c38f034b4211d95d8c7112f3ab63c9bd0449b6514210149d470042b2d931c71d"
    },
    "_meta": {
      "lwt": 1682698681206.01
    },
    "_deleted": false,
    "_attachments": {},
    "_rev": "2-rgmxmqcfms"
  }
]